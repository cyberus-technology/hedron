stages:
  - build
  - integration_test

# Job description helpers

.in_ubuntu_bionic:
  image: ubuntu:bionic
  variables:
    DEBIAN_FRONTEND: 'noninteractive'

.with_ubuntu_builddeps:
  variables:
    CATCH_VERSION: 'v2.9.1'
  before_script:
    - apt-get update && apt-get -y install software-properties-common && add-apt-repository -y ppa:js-alien8/tup
    - apt-get update && apt-get -y install gcc g++ pkg-config python3 python3-distutils git ninja-build tup curl
    - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    - python3 get-pip.py
    - pip install --upgrade cmake
    - rm -rf ../Catch2 && git clone --depth=1 --single-branch -b $CATCH_VERSION https://github.com/catchorg/Catch2.git ../Catch2
    - ( cd ../Catch2 && cmake -Bbuild -H. -DBUILD_TESTING=OFF && make -C build && make -C build install )

.with_ubuntu_testdeps:
  before_script:
    - apt-get update && apt-get -y install build-essential qemu-system-x86 expect

.in_latest_fedora:
  image: fedora:latest

.with_fedora_builddeps:
  before_script:
    - dnf -y update && dnf -y install clang gcc gcc-c++ cmake catch-devel libasan libubsan ninja-build

.with_fedora_testdeps:
  before_script:
    - dnf -y update && dnf -y install libasan libubsan qemu-system-x86 expect

.only_for_releases:
  only:
    - tags
    - /^[\d-]+-release$/
  artifacts:
    expire_in: 5 year

.except_for_releases:
  except:
    - tags
    - /^[\d-]+-release$/
  artifacts:
    expire_in: 1 week

.build_variant_with_ninja:
  stage: build
  script:
    - cmake -B build -S . -G Ninja -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - ninja -C build
    - ninja -C build test
  artifacts:
    expire_in: 1 week
    paths:
      - build/src/hypervisor
      - build/src/hypervisor.elf32

.build_variant_with_make:
  stage: build
  script:
    - cmake -B build -S . -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - make -C build
    - make -C build test
  artifacts:
    expire_in: 1 week
    paths:
      - build/src/hypervisor
      - build/src/hypervisor.elf32

.build_release:
  variables:
    BUILD_TYPE: 'Release'
  extends:
    - .build_variant_with_ninja

.build_debug:
  variables:
    BUILD_TYPE: 'Debug'
  extends:
    - .build_variant_with_ninja

.integration_test_variant:
  stage: integration_test
  script:
    - ./test/integration/qemu-boot ./build/src/hypervisor.elf32

# Build Job descriptions

build:fedora-release:
  extends:
    - .in_latest_fedora
    - .with_fedora_builddeps
    - .build_release
    - .except_for_releases

build:fedora-debug:
  extends:
    - .in_latest_fedora
    - .with_fedora_builddeps
    - .build_debug
    - .except_for_releases

# build:fedora-clang:
#   variables:
#     CXX: 'clang++'
#     CC: 'clang'
#   extends:
#     - .in_latest_fedora
#     - .with_fedora_builddeps
#     - .build_debug
#     - .except_for_releases

build:bionic:
  extends:
    - .in_ubuntu_bionic
    - .with_ubuntu_builddeps
    - .build_release
    - .except_for_releases

build:bionic-tup:
  stage: build
  script:
    - tup init
    - tup variant configs/gcc-werror.config
    - tup
    - ./build-gcc-werror/test/unit/unit
  artifacts:
    expire_in: 1 week
    paths:
      - build-gcc-werror/src/hypervisor-x86_64
      - build-gcc-werror/src/hypervisor-x86_64.elf32
  extends:
    - .in_ubuntu_bionic
    - .with_ubuntu_builddeps
    - .except_for_releases

build:bionic-make:
  stage: build
  variables:
      BUILD_TYPE: 'Debug'
  extends:
    - .in_ubuntu_bionic
    - .with_ubuntu_builddeps
    - .build_variant_with_make
    - .except_for_releases

# Integration Test Decriptions

integration_test:fedora-release:
  dependencies:
    - build:fedora-release
  extends:
    - .in_latest_fedora
    - .with_fedora_testdeps
    - .integration_test_variant
    - .except_for_releases

integration_test:fedora-debug:
  dependencies:
    - build:fedora-debug
  extends:
    - .in_latest_fedora
    - .with_fedora_testdeps
    - .integration_test_variant
    - .except_for_releases

# integration_test:fedora-clang:
#   dependencies:
#     - build:fedora-clang
#   extends:
#     - .in_latest_fedora
#     - .with_fedora_testdeps
#     - .integration_test_variant
#     - .except_for_releases

integration_test:bionic:
  dependencies:
    - build:bionic
  extends:
    - .in_ubuntu_bionic
    - .with_ubuntu_testdeps
    - .integration_test_variant
    - .except_for_releases

# This target builds and executes all of the above and more on NixOS,
# so we put it in the integration test phase.
integration_test:nixos:
  stage: integration_test
  image: nixos/nix
  script:
    - mkdir -p output
    # Workaround Gitlab CI not archiving across symlinks
    - mkdir -p output/compilers/
    - cp -r $(nix-build --no-out-link nix/release.nix -A nova) output/compilers/
    - mkdir -p output/integration-test/
    - cp -r $(nix-build --no-out-link nix/release.nix -A integration-test) output/integration-test/
    - mkdir -p output/coverage/
    - cp -r $(nix-build --no-out-link nix/release.nix -A coverage) output/coverage/
  artifacts:
    expire_in: 1 week
    paths:
      - output/
